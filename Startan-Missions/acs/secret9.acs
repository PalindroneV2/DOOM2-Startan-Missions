#include "zcommon.acs"
#include "packapunchmachine.acs"

global int 7 : SecretLevel37;
int playershealth;
int playerisarmored;

script 1 enter
{
	ClearInventory();
    zombiepoints = 500;
	GiveInventory("DoomFist", 1);
	GiveInventory("M1911A1",1);
	GiveInventory("Clip",32);
    Thing_ChangeTID(0,900);
}

script "FurnaceRoomExplosion" (void)
{  
	SpawnProjectile(1,"Rocket",180,64,0,0,0);
    // SpawnProjectile(int tid, string type, int angle, int speed, int vspeed, int gravity, int newtid)
	Delay(15);
	Floor_LowerByValue(3,256,128);
}

bool poweron = false;

script "PowerOn" (void)
{
    Door_Open(7, 16);
    Floor_LowerByValue(5 , 16, 96);
    SetLineTexture(5, SIDE_FRONT, TEXTURE_BOTTOM,"COMPSW01"); 
    SetLineActivation(5,SPAC_Use);
    ChangeFloor(15, "PERKTOP1");
    ChangeFloor(16, "PERKTOP1");
    ChangeFloor(17, "PERKTOP1");
    Floor_RaiseByValue(15, 32, 96);
    Floor_RaiseByValue(16, 32, 112);
    Floor_RaiseByValue(17, 32, 96);
    poweron = true;
}

bool TP1 = false;
bool TP2 = false;
bool TP3 = false;
bool TELEPORTER1 = false;
bool TELEPORTER2 = false;
bool TELEPORTER3 = false;
bool MAINFRAME = false;
int TELEPORTERTIME;

script "Teleporter_Link_1" (void) // ANIMAL LAB
{
    TELEPORTERTIME = 35 * 30;
    TP1 = true;
    // Log(s:"TP1 == true");
    while(MAINFRAME == false && TELEPORTERTIME != 0){
        HudMessageBold(s:"LINK TELEPORTER TO MAINFRAME";  HUDMSG_FADEOUT, 101, CR_GOLD, 0.5, 0.2,1.0, 1);
        HudMessageBold(i:TELEPORTERTIME / 35;  HUDMSG_FADEOUT, 102, CR_WHITE, 0.5, 0.25,1.0, 1);
        Delay(1);
        TELEPORTERTIME--;
    }
    TELEPORTERTIME = 35 * 30;
    TP1 = false;
}
script "Teleporter_Link_2" (void) // ANIMAL LAB
{
    TELEPORTERTIME = 35 * 30;
    TP2 = true;
    // Log(s:"TP2 == true");
    while(MAINFRAME == false && TELEPORTERTIME != 0){
        HudMessageBold(s:"LINK TELEPORTER TO MAINFRAME";  HUDMSG_FADEOUT, 101, CR_GOLD, 0.5, 0.2,1.0, 1);
        HudMessageBold(i:TELEPORTERTIME / 35;  HUDMSG_FADEOUT, 102, CR_WHITE, 0.5, 0.25,1.0, 1);
        Delay(1);
        TELEPORTERTIME--;
    }
    TELEPORTERTIME = 35 * 30;
    TP2 = false;
}
script "Teleporter_Link_3" (void) // ANIMAL LAB
{
    TELEPORTERTIME = 35 * 30;
    TP3 = true;
    // Log(s:"TP3 == true");
    while(MAINFRAME == false && TELEPORTERTIME != 0){
        HudMessageBold(s:"LINK TELEPORTER TO MAINFRAME";  HUDMSG_FADEOUT, 101, CR_GOLD, 0.5, 0.2,1.0, 1);
        HudMessageBold(i:TELEPORTERTIME / 35;  HUDMSG_FADEOUT, 102, CR_WHITE, 0.5, 0.25,1.0, 1);
        Delay(1);
        TELEPORTERTIME--;
    }
    TELEPORTERTIME = 35 * 30;
    TP3 = false;
}
script "Teleporter_Activate" (void) // ANIMAL LAB
{
    if(TP1 == true){
        MAINFRAME = true;
        Floor_LowerByValue(8, 16, 120);
        TELEPORTER1 = true;
        HudMessageBold(s:"TELEPORTER A LINKED";  HUDMSG_FADEOUT, 101, CR_GOLD, 0.5, 0.2,1.0, 1);
        SetLineTexture(11, SIDE_FRONT, TEXTURE_BOTTOM,"COMSCR00"); 
        SetLineActivation(11,SPAC_None);
        ACS_NamedExecute("Teleporter_Main_Open",0,0,0,0);
        ACS_NamedTerminate("Teleporter_Link_1",0);
    }else{
        HudMessageBold(s:"NO TELEPORTER LINK IN PROCESS";  HUDMSG_FADEOUT, 101, CR_GOLD, 0.5, 0.2,1.0, 1);
    }

    if(TP2 == true){
        MAINFRAME = true;
        Floor_LowerByValue(9, 16, 120);
        TELEPORTER2 = true;
        HudMessageBold(s:"TELEPORTER B LINKED";  HUDMSG_FADEOUT, 101, CR_GOLD, 0.5, 0.2,1.0, 1);
        SetLineTexture(12, SIDE_FRONT, TEXTURE_BOTTOM,"COMSCR00"); 
        SetLineActivation(12,SPAC_None);
        ACS_NamedExecute("Teleporter_Main_Open",0,0,0,0);
        ACS_NamedTerminate("Teleporter_Link_2",0);
    }else{
        HudMessageBold(s:"NO TELEPORTER LINK IN PROCESS";  HUDMSG_FADEOUT, 101, CR_GOLD, 0.5, 0.2,1.0, 1);
    }

    if(TP3 == true){
        MAINFRAME = true;
        Floor_LowerByValue(6, 16, 120);
        TELEPORTER3 = true;
        HudMessageBold(s:"TELEPORTER C LINKED";  HUDMSG_FADEOUT, 101, CR_GOLD, 0.5, 0.2,1.0, 1);
        SetLineTexture(13, SIDE_FRONT, TEXTURE_BOTTOM,"COMSCR00"); 
        SetLineActivation(13,SPAC_None);
        ACS_NamedExecute("Teleporter_Main_Open",0,0,0,0);
        ACS_NamedTerminate("Teleporter_Link_3",0);
    }else{
        HudMessageBold(s:"NO TELEPORTER LINK IN PROCESS";  HUDMSG_FADEOUT, 101, CR_GOLD, 0.5, 0.2,1.0, 1);
    }
    TP1 = false;
    TP2 = false;
    TP3 = false;
    MAINFRAME = false;
} 
script "Teleporter_Main_Open" (void)
{
    if(TELEPORTER1 == true && TELEPORTER2 == true && TELEPORTER3 == true)
    {
        Floor_LowerByValue(10, 16, 120);
        Delay (35);
        SetLineTexture(14, SIDE_FRONT, TEXTURE_BOTTOM,"COMSCR00"); 
        SetLineActivation(14,SPAC_None);
        SetLineTexture(6, SIDE_FRONT, TEXTURE_BOTTOM,"COMPSW01"); 
        SetLineActivation(6,SPAC_Impact);
    }
}

script "FlyTrapStart" (void)
{
    Delay(1);
    SpawnSpotFacing("TeddyBearKnife", 2,66);
    SpawnSpotFacing("TeddyBearPerkaholic", 3,66);
    SpawnSpotFacing("TeddyBear", 4,66);
    SetFont("BIGFONT");
    HudMessageBold(s:"LET'S PLAY HIDE AND SEEK!";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
    SetThingSpecial(66, ACS_NamedExecuteAlways, "FlyTrapShoot");
    Delay(35);
    SetLineTexture(6, SIDE_FRONT, TEXTURE_BOTTOM,"COMSCR00"); 
    SetLineActivation(6,SPAC_None);
}

script "FlyTrapShoot" (void)
{
    Delay(1);
    if(ThingCount(T_NONE, 66)==0){
        SetFont("BIGFONT");
        HudMessageBold(s:"YOU WIN!!";  HUDMSG_FADEOUT, 901, CR_WHITE, 0.5, 0.7, 1.0, 1);
        HudMessageBold(s:"GAME OVER!";  HUDMSG_FADEOUT, 900, CR_RED, 0.5, 0.75, 1.0, 1);
        SetLineTexture(14, SIDE_FRONT, TEXTURE_BOTTOM,"COMPSW01"); 
        SetLineActivation(14, SPAC_Use);
        SetLineSpecial(14, ACS_NamedExecute, "PAPGONE");
    }
}

script "PAPGONE" (void)
{
    TeleportOther(7, 5, 1);
    Floor_LowerByValue(11, 16, 8);
    ChangeFloor(11,"FWATER1");
    Delay (35);
    SetLineTexture(14, SIDE_FRONT, TEXTURE_BOTTOM,"COMSCR00"); 
    SetLineActivation(14,SPAC_None);
}

script 666 ENTER 
//ROUND COUNTER HANDLER
{
    SetFont("BIGFONT");
    HudMessageBold(s:"$: ", i:zombiepoints;  HUDMSG_PLAIN, 937, CR_WHITE, 0.01, 0.7, 0, 1);
    playershealth = GetActorProperty(900, APROP_Health);
    Delay(1);
    Restart;
}

script "ZombieKill1" (void){
    int enemyvalue = 100 + (10 * Random(0,2));
    zombiepoints = zombiepoints + enemyvalue;
    HudMessageBold(s:" + $",  i:enemyvalue;  HUDMSG_FADEOUT, 555, CR_WHITE, 0.01, 0.65, 1.0, 1);
}

script "PointsAddCheat" (void){
    zombiepoints = zombiepoints + 5000;
    HudMessageBold(s:"Cheater!!!!";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
}

script "ZombieSpawn" ENTER
{
    if(ThingCount(T_NONE, 115)==0){
        SetFont("BIGFONT");
        HudMessageBold(s:"FETCH ME THEIR SOULS!!";  HUDMSG_FADEOUT, 901, CR_WHITE, 0.5, 0.7, 1.0, 1);
        Delay(35);
        SpawnSpotFacing("W3DSSZombie", 25, 115);
        SpawnSpotFacing("TeleportFog", 25, 115);
        SetThingSpecial(115, ACS_NamedExecuteAlways, "ZombieKill1");
        SetActorFlag(115, "COUNTKILL", false);
        Thing_Hate(115, 900, 2);
    }
    Delay(35);
    Restart;
}

script "Endmap" (void)
{
	SecretLevel37++;
	Teleport_NewMap(100,0, 0);
}

bool samroom = false;

script "SamRoomBool" (void)
{
    samroom = true;
}

script "Teleporters" (void)
{
    if (samroom == false)
    {
        Teleport(13, 13);
    }else{
        Teleport(14, 14);
        Delay(35 * 15);
        Teleport(13, 13);
        samroom = false;
    }
}

script "JuggerNog" (void)
{
    if (poweron == true){
        int randy = Random(1, 10);
        if(playershealth < 100)
        {
            if(zombiepoints > 500)
            {
                zombiepoints = zombiepoints - 500;
                if(randy == 1)
                {
                    GiveInventory("NewBerserk", 100);
                    HudMessageBold(s:"Berserk!";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
                    Delay(35);
                }else{
                    GiveInventory("FullHeal", 100);
                    HudMessageBold(s:"Fully Healed!";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
                    Delay(35);
                }
            }else{
                HudMessageBold(s:"Not Enough Points.";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
                Delay(35);
            }
        }else{
            HudMessageBold(s:"Already at full health.";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
            Delay(35);
        }
    }else{
        Delay(1);
    }
}
script "JuggerNogTexto" (void)
{
    if (poweron == true){
        HudMessageBold(s:"Health: $500";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
        if(playershealth >= 100)
        {
            HudMessageBold(s:"Already at full health.";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
            Delay(35);
        }
    }else{
        Delay(1);
    }
}

script "QuickRevive" (void)
{
    if (poweron == true){
        playerisarmored =  CheckInventory("Armor");
        int randy = Random(1, 10);
        if(playershealth < 200)
        {
            if(zombiepoints > 1000)
            {
                zombiepoints = zombiepoints - 1000;
                if(randy == 1)
                {
                    GiveInventory("Megasphere", 1);
                    HudMessageBold(s:"Megasphere!";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
                    Delay(35);
                }else{
                    GiveInventory("Soulsphere", 100);
                    HudMessageBold(s:"Soulsphere!";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
                    Delay(35);
                }
            }else{
                HudMessageBold(s:"Not Enough Points.";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
                Delay(35);
            }
        }else{
            HudMessageBold(s:"Already at full health.";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
            Delay(35);
        }
    }else{
        Delay(1);
    }
}
script "QuickReviveTexto" (void)
{
    if (poweron == true){
        HudMessageBold(s:"Power Up: $1000";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
        if(playershealth >= 200)
        {
            HudMessageBold(s:"Already at full health.";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
            Delay(35);
        }
    }else{
        Delay(1);
    }
}

script "VictoriousTortoise" (void)
{
    if(poweron == true){
        playerisarmored =  CheckInventory("Armor");
        int randy = Random(1, 100);
        if(playerisarmored < 100)
        {
            if(zombiepoints > 500)
            {
                zombiepoints = zombiepoints - 500;
                if(randy <= 5)
                {
                    GiveInventory("EnchantedArmor", 1);
                    HudMessageBold(s:"Enchanted Armor!";  HUDMSG_FADEOUT, 900, CR_GOLD, 0.5, 0.7, 1.0, 1);
                    Delay(35);
                }else if((randy >= 6) && (randy <= 20))
                {
                    GiveInventory("RedArmor", 1);
                    HudMessageBold(s:"Advanced Armor!";  HUDMSG_FADEOUT, 900, CR_RED, 0.5, 0.7, 1.0, 1);
                    Delay(35);
                }else if((randy >= 21) && (randy <= 50))
                {
                    GiveInventory("BlueArmor50", 1);
                    HudMessageBold(s:"Combat Armor!";  HUDMSG_FADEOUT, 900, CR_BLUE, 0.5, 0.7, 1.0, 1);
                    Delay(35);
                }else if((randy >= 51) && (randy <= 100))
                {
                    GiveInventory("GreenArmor35", 1);
                    HudMessageBold(s:"Security Armor!";  HUDMSG_FADEOUT, 900, CR_GREEN, 0.5, 0.7, 1.0, 1);
                    Delay(35);
                }
            }else{
                HudMessageBold(s:"Not Enough Points.";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
                Delay(35);
            }
        }else if(playerisarmored >= 100 && playerisarmored <= 199){
            if(zombiepoints > 1000)
            {
                zombiepoints = zombiepoints - 1000;
                if(randy <= 5)
                {
                    GiveInventory("EnchantedArmor", 1);
                    HudMessageBold(s:"Enchanted Armor!";  HUDMSG_FADEOUT, 900, CR_GOLD, 0.5, 0.7, 1.0, 1);
                    Delay(35);
                }else if((randy >= 6) && (randy <= 50))
                {
                    GiveInventory("RedArmor", 1);
                    HudMessageBold(s:"Advanced Armor!";  HUDMSG_FADEOUT, 900, CR_RED, 0.5, 0.7, 1.0, 1);
                    Delay(35);
                }else if((randy >= 51) && (randy <= 100))
                {
                    GiveInventory("BlueArmor50", 1);
                    HudMessageBold(s:"Combat Armor!";  HUDMSG_FADEOUT, 900, CR_BLUE, 0.5, 0.7, 1.0, 1);
                    Delay(35);
                }
            }else{
                HudMessageBold(s:"Not Enough Points.";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
                Delay(35);
            }
        }else if(playerisarmored == 200){
            HudMessageBold(s:"Already at full armor.";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
            Delay(35);
        }
    }else{
        Delay(1);
    }
}

str armortypesarray[4] = {
    "GreenArmor35",
    "BlueArmor50",
    "RedArmor",
    "EnchantedArmor",
};
str armornamesarray[4] = {
    "Security Armor",
    "Combat Armor",
    "Advanced Armor",
    "Enchanted Armor",
};
str armorcolorsarray[4] = {
    "\cd",
    "\ch",
    "\cg",
    "\cf",
};

script "VictoriousTortoiseTexto" (void)
{
    if (poweron == true){
        HudMessageBold(s:"Armor: $500";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
        playerisarmored =  CheckInventory("Armor");
        str currentarmor;
        str currentarmorcolor;
        for (int i; i<5; i++)
        {
            if (GetArmorType(armortypesarray[i], PlayerNumber()))
            {
                currentarmor=armornamesarray[i];
                currentarmorcolor=armorcolorsarray[i];
                break;
            }
        }
        if(playerisarmored >= 1)
        {
            HudMessageBold(s:"Current Armor: ", s:currentarmorcolor, s:currentarmor;  HUDMSG_FADEOUT, 901, CR_WHITE, 0.5, 0.725, 1.0, 1);
            HudMessageBold(s:"At Value: ", i:playerisarmored;  HUDMSG_FADEOUT, 902, CR_WHITE, 0.5, 0.750, 1.0, 1);
        }
        if (playerisarmored >= 100 && playerisarmored < 200)
        {
            HudMessageBold(s:"Upgrade Armor: $1000";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
        }
        if (playerisarmored == 200)
        {
            HudMessageBold(s:"Already at full armor.";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
        }
    }else{
        Delay(1);
    }
}