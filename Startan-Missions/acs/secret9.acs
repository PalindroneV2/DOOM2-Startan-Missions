#include "zcommon.acs"
#include "packapunchmachine.acs"

global int 9 : SecretLevel39;
int playershealth;
int playerisarmored;

int howmanyzombies;
int roundwave;
int zombiecount;
int wavenumbers;

int counter;

bool roundcomplete = false;

script 1 enter
{
	ClearInventory();
    zombiepoints = 500;
	GiveInventory("DoomFist", 1);
	GiveInventory("M1911A1",1);
	GiveInventory("Clip",32);
    Thing_ChangeTID(0,900);
}

script "ZombiePointCounter" ENTER 
//ROUND COUNTER HANDLER
{
    SetFont("BIGFONT");
    HudMessageBold(s:"$: ", i:zombiepoints;  HUDMSG_PLAIN, 937, CR_WHITE, 0.01, 0.7, 0, 1);
    Delay(1);
    Restart;
}

script "ZombieKill1" (void){
    int enemyvalue = 100 + (10 * Random(0,2));
    zombiepoints = zombiepoints + enemyvalue;
    HudMessageBold(s:" + $",  i:enemyvalue;  HUDMSG_FADEOUT, 555, CR_WHITE, 0.01, 0.65, 1.0, 1);
}

script "PointsAddCheat" (void){
    zombiepoints = zombiepoints + 5000;
    HudMessageBold(s:"Cheater!!!!";  HUDMSG_FADEOUT, 900, CR_WHITE, 0.5, 0.7, 1.0, 1);
}

script "GameStart" ENTER
{
    counter = 35 * 5;
    while(counter > 0)
    {
        Delay(1);
        counter--;
        HudMessageBold(s:"FETCH ME THEIR SOULS!";  HUDMSG_FADEOUT, 1003, CR_RED, 0.5, 0.5,1.0, 1);
        HudMessage(i:counter / 35;  HUDMSG_FADEOUT, 1004, CR_WHITE, 0.5, 0.55, 1.0, 1);
    }
    roundwave = 1;
    roundcomplete = false;
}

script "RoundWaveHandler" ENTER
{
    HudMessageBold(s:"Round: ", i:roundwave;  HUDMSG_PLAIN, 1002, CR_WHITE, 0.1, 0.1, 0, 1);
    if (roundwave > 0)
    {
        howmanyzombies = 24 + ((roundwave - 1) * 4);
    }
    if ((roundwave % 5) == 1 && zombiecount == 0)
    {
        Thing_Remove(115);
    }
    zombiecount = ThingCount(T_NONE, 115);
    if (roundwave > 0 && roundcomplete == false && wavenumbers < 1)
    {
        while(wavenumbers < howmanyzombies && zombiecount < howmanyzombies)
        {
            ZombieSpawn();
            wavenumbers++;
            zombiecount = ThingCount(T_NONE, 115);
            Delay(10);
        }
    }
    zombiecount = ThingCount(T_NONE, 115);
    if (wavenumbers == howmanyzombies)
    {
        roundcomplete = true;
    }
    wavenumbers = 0;
    if (zombiecount == 0 && roundcomplete == true && roundwave > 0)
    {
        counter = 350;
        while(counter > 0)
        {
            Delay(1);
            counter--;
            HudMessageBold(s:"NEXT ROUND:";  HUDMSG_FADEOUT, 1003, CR_RED, 0.5, 0.5,1.0, 1);
            HudMessage(i:counter / 35;  HUDMSG_FADEOUT, 1004, CR_WHITE, 0.5, 0.55, 1.0, 1);
        }
        roundwave++;
        roundcomplete = false;
    }
    Delay(35);
    Restart;
}

script "GiveFullAmmo" (void)
{
    SpawnSpotFacing("TeleportFog", 100);
    SpawnSpotFacing("MaxAmmo_Powerup", 100);
}

function void ZombieSpawn (void)
{
    str zombies[2] = {"W3DSSZombie", "W3DHeerZombie"};
    int zombiechoice = Random(0,1);
    int spawnchoice = Random (1,96);
    Log(s:"Spot: ", i:spawnchoice, s: " -- Spawnnumber: ", i:wavenumbers );
    SpawnSpotFacing(zombies[zombiechoice], spawnchoice, 115);
    // Log(s:"Spawning Zombie Type: ", s:zombies[zombiechoice]);
    SpawnSpotFacing("TeleportFog", spawnchoice, 0);
    SetThingSpecial(115, ACS_NamedExecuteAlways, "ZombieKill1");
    SetActorFlag(115, "COUNTKILL", false);
    Thing_Hate(115, 900, 2);
}

script "ZombieCount" ENTER
{
    zombiecount = ThingCount(T_NONE, 115);
    HudMessageBold(s:"Zombies Remaining: ";  HUDMSG_PLAIN, 1000, CR_WHITE, 0.5, 0.125, 0, 1);
    HudMessageBold(i:zombiecount, s:"/", i:howmanyzombies;  HUDMSG_PLAIN, 1001, CR_WHITE, 0.5, 0.15, 0, 1);
    Delay(1);
    Restart;
}

script "PlayerRegen" ENTER
{
    playershealth = GetActorProperty(900, APROP_Health);
    if (playershealth < 100){
        Delay (3*35);
        while (playershealth < 100){
            playershealth = GetActorProperty(900, APROP_Health);
            GiveActorInventory(900, "Medikit", 10);
            Delay(10);
        }
    }
    Delay(1);
    Restart;
}

script "Endmap" (void)
{
	SecretLevel39++;
	Teleport_NewMap(100,0, 0);
}